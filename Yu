// src/Map.js
import React, { useEffect, useRef } from 'react';
import * as d3 from 'd3';
import worldData from './world-110m.json'; // Make sure you have this file or use a URL

const Map = () => {
  const svgRef = useRef();

  useEffect(() => {
    const svg = d3.select(svgRef.current);
    const width = 960;
    const height = 500;

    const projection = d3.geoMercator().scale(150).translate([width / 2, height / 1.5]);
    const path = d3.geoPath().projection(projection);

    // Clear previous contents
    svg.selectAll('*').remove();

    // Draw the map
    const countries = topojson.feature(worldData, worldData.objects.countries).features;

    svg.selectAll('.country')
      .data(countries)
      .enter()
      .append('path')
      .attr('class', 'country')
      .attr('d', path)
      .attr('fill', '#ccc')
      .attr('stroke', '#333');

    // Define sample coordinates for lines
    const lines = [
      { source: [-74.006, 40.7128], target: [2.3522, 48.8566] }, // New York to Paris
      { source: [-0.1276, 51.5074], target: [139.6917, 35.6895] } // London to Tokyo
    ];

    // Draw connecting lines
    svg.selectAll('.line')
      .data(lines)
      .enter()
      .append('line')
      .attr('x1', d => projection(d.source)[0])
      .attr('y1', d => projection(d.source)[1])
      .attr('x2', d => projection(d.target)[0])
      .attr('y2', d => projection(d.target)[1])
      .attr('stroke', 'blue')
      .attr('stroke-width', 2);

  }, []);

  return (
    <svg ref={svgRef} width={960} height={500}></svg>
  );
};

export default Map;
